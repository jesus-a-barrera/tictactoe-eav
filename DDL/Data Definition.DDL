DROP TABLE DSU_ATTR_OBJECT_TYPES;
DROP TABLE DSU_META_REFERENCES;
DROP TABLE DSU_PARAMS;
DROP TABLE DSU_REFERENCE;
DROP TABLE DSU_ATTRIBUTES;
DROP TABLE DSU_ATTRIBUTES_TYPES;
DROP TABLE DSU_ATTR_GROUPS;
DROP TABLE DSU_LIST_VALUES;
DROP TABLE DSU_ATTR_TYPE_DEFS;
DROP TABLE DSU_ATTR_SCHEMES;
DROP TABLE DSU_OBJECTS;
DROP TABLE DSU_OBJECT_TYPES;

DROP SEQUENCE DSU_ATTR_GROUPS_ATTR_GROUP_ID;
DROP SEQUENCE DSU_ATTR_SCHEMES_ATTR_SCHEMA_I;
DROP SEQUENCE DSU_ATTR_TYPE_DEFS_ATTR_TYPE_D;
DROP SEQUENCE DSU_ATTRIBUTES_ATTR_ID_SEQ;
DROP SEQUENCE DSU_ATTRIBUTES_TYPES_ATTR_TYPE;
DROP SEQUENCE DSU_LIST_VALUES_LIST_VALUE_ID;
DROP SEQUENCE DSU_OBJECT_TYPES_OBJECT_TYPE_I;
DROP SEQUENCE DSU_OBJECTS_OBJECT_ID_SEQ;


-- Generated by Oracle SQL Developer Data Modeler 21.4.2.059.0838
--   at:        2022-08-09 11:45:14 CST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c


-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE dsu_attr_groups (
    attr_group_id    INTEGER NOT NULL,
    attr_schema_id   INTEGER,
    name             VARCHAR2(50),
    show_order       INTEGER,
    attr_access_type INTEGER,
    flags            INTEGER DEFAULT 0,
    description      VARCHAR2(50),
    subgroup         VARCHAR2(50),
    alias            VARCHAR2(50),
    params           VARCHAR2(50)
)
LOGGING;

ALTER TABLE dsu_attr_groups ADD CONSTRAINT dsu_attr_groups_pk PRIMARY KEY ( attr_group_id );

CREATE TABLE dsu_attr_object_types (
    attr_id        INTEGER NOT NULL,
    object_type_id INTEGER NOT NULL,
    attr_schema_id INTEGER,
    isdisplayed    NUMBER DEFAULT 1,
    required       NUMBER DEFAULT 0,
    options        INTEGER,
    default_value  VARCHAR2(50),
    flags          VARCHAR2(50)
)
LOGGING;

ALTER TABLE dsu_attr_object_types ADD CONSTRAINT dsu_attr_object_types_pk PRIMARY KEY ( object_type_id,
                                                                                        attr_id );

CREATE TABLE dsu_attr_schemes (
    attr_schema_id   INTEGER NOT NULL,
    parent_id        INTEGER,
    name             VARCHAR2(50),
    attr_access_type INTEGER,
    issystem         INTEGER,
    description      VARCHAR2(50),
    flags            INTEGER,
    internal_name    INTEGER
)
LOGGING;

ALTER TABLE dsu_attr_schemes ADD CONSTRAINT dsu_attr_schemes_pk PRIMARY KEY ( attr_schema_id );

CREATE TABLE dsu_attr_type_defs (
    attr_type_def_id   INTEGER NOT NULL,
    attr_type_id       INTEGER,
    attr_schema_id     INTEGER,
    object_type_id     INTEGER,
    name               VARCHAR2(50),
    dtd                VARCHAR2(50),
    attr_access_type   VARCHAR2(50),
    object_ref_attr_id INTEGER,
    attr_ref_id        INTEGER,
    flags              INTEGER DEFAULT 0
)
LOGGING;

ALTER TABLE dsu_attr_type_defs ADD CONSTRAINT dsu_attr_type_definitions_pk PRIMARY KEY ( attr_type_def_id );

CREATE TABLE dsu_attributes (
    attr_id          INTEGER NOT NULL,
    attr_type_id     INTEGER NOT NULL,
    attr_type_def_id INTEGER,
    attr_group_id    INTEGER,
    attr_schema_id   INTEGER,
    name             VARCHAR2(50),
    attr_access_type INTEGER,
    ismultiple       INTEGER DEFAULT 0,
    isextgenerated   INTEGER DEFAULT 0,
    adaptername      VARCHAR2(50),
    params           VARCHAR2(250),
    unique_level     INTEGER DEFAULT 0,
    show_order       INTEGER DEFAULT 0,
    show_history     INTEGER DEFAULT 0,
    issearcheable    INTEGER,
    mask             VARCHAR2(50),
    def_value        VARCHAR2(50),
    flags            INTEGER,
    description      VARCHAR2(50),
    properties       VARCHAR2(50)
)
LOGGING;

ALTER TABLE dsu_attributes ADD CONSTRAINT dsu_attributes_pk PRIMARY KEY ( attr_id );

CREATE TABLE dsu_attributes_types (
    attr_type_id INTEGER NOT NULL,
    name         VARCHAR2(50),
    description  VARCHAR2(250)
)
LOGGING;

ALTER TABLE dsu_attributes_types ADD CONSTRAINT dsu_attributes_types_pk PRIMARY KEY ( attr_type_id );

CREATE TABLE dsu_list_values (
    list_value_id    INTEGER NOT NULL,
    attr_type_def_id INTEGER NOT NULL,
    value            VARCHAR2(100),
    show_order       INTEGER,
    additional       VARCHAR2(50),
    flags            INTEGER,
    list_value_group VARCHAR2(50)
)
LOGGING;

ALTER TABLE dsu_list_values ADD CONSTRAINT dsu_list_values_pk PRIMARY KEY ( list_value_id );

CREATE TABLE dsu_meta_references (
    attr_id            INTEGER,
    object_id          INTEGER,
    ref_attr_id        INTEGER,
    ref_object_type_id INTEGER,
    ref_attr_schema_id INTEGER,
    show_order         INTEGER
)
LOGGING;

CREATE TABLE dsu_object_types (
    object_type_id INTEGER NOT NULL,
    parent_id      INTEGER,
    picture_id     INTEGER,
    name           VARCHAR2(50),
    description    VARCHAR2(50),
    isclass        NUMBER,
    issystem       NUMBER,
    issearchable   NUMBER,
    icon_id        INTEGER,
    alias          VARCHAR2(50),
    flags          INTEGER,
    properties     VARCHAR2(50),
    isabstract     NUMBER,
    internal_name  VARCHAR2(50)
)
LOGGING;

ALTER TABLE dsu_object_types ADD CONSTRAINT dsu_object_types_pk PRIMARY KEY ( object_type_id );

CREATE TABLE dsu_objects (
    object_id        INTEGER NOT NULL,
    object_type_id   INTEGER NOT NULL,
    name             VARCHAR2(50),
    description      VARCHAR2(250),
    parent_id        INTEGER,
    abstract         NUMBER(1) DEFAULT ON NULL 0,
    order_number     INTEGER,
    object_class_id  INTEGER,
    picture_id       INTEGER,
    attr_schema_id   INTEGER,
    source_object_id INTEGER,
    version          INTEGER
)
LOGGING;

ALTER TABLE dsu_objects ADD CONSTRAINT dsu_objects_pk PRIMARY KEY ( object_id );

CREATE TABLE dsu_params (
    attr_id       INTEGER NOT NULL,
    object_id     INTEGER NOT NULL,
    value         VARCHAR2(250),
    date_value    DATE,
    list_value_id INTEGER
)
LOGGING;

ALTER TABLE dsu_params ADD CONSTRAINT dsu_params_pk PRIMARY KEY ( attr_id,
                                                                  object_id );

CREATE TABLE dsu_reference (
    object_id INTEGER NOT NULL,
    reference INTEGER NOT NULL
)
LOGGING;

ALTER TABLE dsu_reference ADD CONSTRAINT dsu_reference_pk PRIMARY KEY ( object_id,
                                                                        reference );

ALTER TABLE dsu_attr_type_defs
    ADD CONSTRAINT at_tp_df_attr_sch_fk FOREIGN KEY ( attr_schema_id )
        REFERENCES dsu_attr_schemes ( attr_schema_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attributes
    ADD CONSTRAINT att_attr_schemes_fk FOREIGN KEY ( attr_schema_id )
        REFERENCES dsu_attr_schemes ( attr_schema_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attributes
    ADD CONSTRAINT attr_attr_groups_fk FOREIGN KEY ( attr_group_id )
        REFERENCES dsu_attr_groups ( attr_group_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attributes
    ADD CONSTRAINT attr_attr_type_def_fk FOREIGN KEY ( attr_type_def_id )
        REFERENCES dsu_attr_type_defs ( attr_type_def_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attributes
    ADD CONSTRAINT attr_attr_types_fk FOREIGN KEY ( attr_type_id )
        REFERENCES dsu_attributes_types ( attr_type_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attr_object_types
    ADD CONSTRAINT attr_obj_tp_attr_sch_fk FOREIGN KEY ( attr_schema_id )
        REFERENCES dsu_attr_schemes ( attr_schema_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attr_schemes
    ADD CONSTRAINT attr_sch_attr_sch_fk FOREIGN KEY ( parent_id )
        REFERENCES dsu_attr_schemes ( attr_schema_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attr_type_defs
    ADD CONSTRAINT attr_typ_df_obj_typfk FOREIGN KEY ( object_type_id )
        REFERENCES dsu_object_types ( object_type_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attr_object_types
    ADD CONSTRAINT attrobjecttypesbjecttypes1 FOREIGN KEY ( attr_id )
        REFERENCES dsu_attributes ( attr_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_attr_object_types
    ADD CONSTRAINT attrobjecttypesbjecttypes2 FOREIGN KEY ( object_type_id )
        REFERENCES dsu_object_types ( object_type_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_list_values
    ADD CONSTRAINT list_valattr_type_def_fk FOREIGN KEY ( attr_type_def_id )
        REFERENCES dsu_attr_type_defs ( attr_type_def_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_meta_references
    ADD CONSTRAINT meta_ref_attr_schemes_fk FOREIGN KEY ( ref_attr_schema_id )
        REFERENCES dsu_attr_schemes ( attr_schema_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_meta_references
    ADD CONSTRAINT meta_ref_attributes_fk FOREIGN KEY ( ref_attr_id )
        REFERENCES dsu_attributes ( attr_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_meta_references
    ADD CONSTRAINT meta_ref_object_types_fk FOREIGN KEY ( ref_object_type_id )
        REFERENCES dsu_object_types ( object_type_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_meta_references
    ADD CONSTRAINT meta_ref_objects_fk FOREIGN KEY ( object_id )
        REFERENCES dsu_objects ( object_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_object_types
    ADD CONSTRAINT objct_typ_objct_typ_fk FOREIGN KEY ( parent_id )
        REFERENCES dsu_object_types ( object_type_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_objects
    ADD CONSTRAINT objects_object_types_fk FOREIGN KEY ( object_type_id )
        REFERENCES dsu_object_types ( object_type_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_objects
    ADD CONSTRAINT objects_objects_fk FOREIGN KEY ( parent_id )
        REFERENCES dsu_objects ( object_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_params
    ADD CONSTRAINT params_list_values_fk FOREIGN KEY ( list_value_id )
        REFERENCES dsu_list_values ( list_value_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_reference
    ADD CONSTRAINT reference_objects_fk FOREIGN KEY ( object_id )
        REFERENCES dsu_objects ( object_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_reference
    ADD CONSTRAINT reference_objects_fkv1 FOREIGN KEY ( reference )
        REFERENCES dsu_objects ( object_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_params
    ADD CONSTRAINT table_9_attributes_fk FOREIGN KEY ( attr_id )
        REFERENCES dsu_attributes ( attr_id )
    NOT DEFERRABLE;

ALTER TABLE dsu_params
    ADD CONSTRAINT table_9_objects_fk FOREIGN KEY ( object_id )
        REFERENCES dsu_objects ( object_id )
    NOT DEFERRABLE;

CREATE SEQUENCE DSU_ATTR_GROUPS_ATTR_GROUP_ID 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_ATTR_GROUPS_ATTR_GROUP_ID 
BEFORE INSERT ON DSU_ATTR_GROUPS 
FOR EACH ROW 
WHEN (NEW.ATTR_GROUP_ID IS NULL) 
BEGIN
:new.attr_group_id := dsu_attr_groups_attr_group_id.nextval;

end;
/

CREATE SEQUENCE DSU_ATTR_SCHEMES_ATTR_SCHEMA_I 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_ATTR_SCHEMES_ATTR_SCHEMA_I 
BEFORE INSERT ON DSU_ATTR_SCHEMES 
FOR EACH ROW 
WHEN (NEW.ATTR_SCHEMA_ID IS NULL) 
BEGIN
:new.attr_schema_id := dsu_attr_schemes_attr_schema_i.nextval;

end;
/

CREATE SEQUENCE DSU_ATTR_TYPE_DEFS_ATTR_TYPE_D 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_ATTR_TYPE_DEFS_ATTR_TYPE_D 
BEFORE INSERT ON DSU_ATTR_TYPE_DEFS 
FOR EACH ROW 
WHEN (NEW.ATTR_TYPE_DEF_ID IS NULL) 
BEGIN
:new.attr_type_def_id := dsu_attr_type_defs_attr_type_d.nextval;

end;
/

CREATE SEQUENCE DSU_ATTRIBUTES_ATTR_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_ATTRIBUTES_ATTR_ID_TRG 
BEFORE INSERT ON DSU_ATTRIBUTES 
FOR EACH ROW 
WHEN (NEW.ATTR_ID IS NULL) 
BEGIN
:new.attr_id := dsu_attributes_attr_id_seq.nextval;

end;
/

CREATE SEQUENCE DSU_ATTRIBUTES_TYPES_ATTR_TYPE 
START WITH 0 
    MINVALUE 0 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_ATTRIBUTES_TYPES_ATTR_TYPE 
BEFORE INSERT ON DSU_ATTRIBUTES_TYPES 
FOR EACH ROW 
WHEN (NEW.ATTR_TYPE_ID IS NULL) 
BEGIN
:new.attr_type_id := dsu_attributes_types_attr_type.nextval;

end;
/

CREATE SEQUENCE DSU_LIST_VALUES_LIST_VALUE_ID 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_LIST_VALUES_LIST_VALUE_ID 
BEFORE INSERT ON DSU_LIST_VALUES 
FOR EACH ROW 
WHEN (NEW.LIST_VALUE_ID IS NULL) 
BEGIN
:new.list_value_id := dsu_list_values_list_value_id.nextval;

end;
/

CREATE SEQUENCE DSU_OBJECT_TYPES_OBJECT_TYPE_I 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_OBJECT_TYPES_OBJECT_TYPE_I 
BEFORE INSERT ON DSU_OBJECT_TYPES 
FOR EACH ROW 
WHEN (NEW.OBJECT_TYPE_ID IS NULL) 
BEGIN
:new.object_type_id := dsu_object_types_object_type_i.nextval;

end;
/

CREATE SEQUENCE DSU_OBJECTS_OBJECT_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER DSU_OBJECTS_OBJECT_ID_TRG 
BEFORE INSERT ON DSU_OBJECTS 
FOR EACH ROW 
WHEN (NEW.OBJECT_ID IS NULL) 
BEGIN
:new.object_id := dsu_objects_object_id_seq.nextval;

end;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0



